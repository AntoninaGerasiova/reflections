What happens when you initialize a repository? Why do you need to do it?
Dirrecory .git was added. I need to add some information about repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
It's tricky question. I think it gives sort of flexibility. For example I can commit only files I want to commit and left others for the next time 

How can you use the staging area to make sure you have one commit per logical
change?
I can add only files changes in wich logicaly connected. I can than use git diff --staged to make sure that I about to commit logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
I can make different version of my program without messing them together. 

How do the diagrams help you visualize the branch structure?
I can found where branches forks and where they merged again. But I really prefer gitk for this purpose rather then draw diagrams myself.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
we get commit with changes from tops of both branches. The way it represented is the most natural way - two branches merging in one.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
